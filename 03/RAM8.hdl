// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=true, sel=address, a=addressA, b=addressB, 
    c=addressC, d=addressD, e=addressE, f=addressF,
    g=addressG, h=addressH);
    And(a=addressA, b=load, out=loadA);
    And(a=addressB, b=load, out=loadB);
    And(a=addressC, b=load, out=loadC);
    And(a=addressD, b=load, out=loadD);
    And(a=addressE, b=load, out=loadE);
    And(a=addressF, b=load, out=loadF);
    And(a=addressG, b=load, out=loadG);
    And(a=addressH, b=load, out=loadH);
    Register(in=in, load=loadA, out=outA);
    Register(in=in, load=loadB, out=outB);
    Register(in=in, load=loadC, out=outC);
    Register(in=in, load=loadD, out=outD);
    Register(in=in, load=loadE, out=outE);
    Register(in=in, load=loadF, out=outF);
    Register(in=in, load=loadG, out=outG);
    Register(in=in, load=loadH, out=outH);
    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, 
    f=outF, g=outG, h=outH, sel=address, out=out); 
}